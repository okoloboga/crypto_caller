version: '3.8'

services:
  # Сервис для backend
  backend:
    build: ./backend
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      #TWILIO_AUTH_TEST_TOKEN: ${TWILIO_AUTH_TEST_TOKEN}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
      OKX_API_KEY: ${OKX_API_KEY}
      OKX_API_SECRET: ${OKX_API_SECRET}
      OKX_API_PASSPHRASE: ${OKX_API_PASSPHRASE}
      SSL_KEY: ${SSL_KEY}
      SSL_CERT: ${SSL_CERT}
      JETTON_MASTER_ADDRESS: ${JETTON_MASTER_ADDRESS}
      CENTRAL_WALLET_MNEMONIC: ${CENTRAL_WALLET_MNEMONIC}
      TON_API_KEY: ${ON_API_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro 
    networks:
      - default

  # Сервис для Postgres
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - default

  # Сервис для Redis
  redis:
    image: redis:alpine
    volumes:
      # Монтируем свой конфигурационный файл redis.conf в контейнер
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]  # Указываем путь к конфигурационному файлу
    networks:
      - default
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

  bot:
    build: ./bot
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      ADMIN_ID: ${ADMIN_ID}
      STATS_IDS: ${STATS_IDS}
      WEB_APP_URL: ${WEB_APP_URL}
      TICKET_ROUTE: ${TICKET_ROUTE}
    networks:
      - default
    restart: always

  # Сервис для Nginx
  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - default
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./frontend/build:/usr/share/nginx/html:ro

      - ./frontend_main:/usr/share/nginx/main:ro          # Для ruble.website
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    command: ["nginx", "-g", "daemon off;"]

volumes:
  postgres_data:
    driver: local

networks:
  default:
    driver: bridge  # Используем общую сеть
