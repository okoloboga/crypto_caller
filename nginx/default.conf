# Перенаправление с HTTP на HTTPS
server {
    listen 80;
    server_name caller.ruble.website;

    # Перенаправление всех запросов на HTTPS
    return 301 https://$host$request_uri;
}

# Блок для HTTPS
server {
    listen 443 ssl;
    server_name caller.ruble.website;

    # Пути к SSL-сертификатам, которые ты получишь через Let's Encrypt
    ssl_certificate /etc/letsencrypt/live/caller.ruble.website/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/caller.ruble.website/privkey.pem;

    # Дополнительные параметры безопасности SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_CBC_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256';
    ssl_prefer_server_ciphers off;

    # Указываем путь к статикам и индексному файлу
    root /usr/share/nginx/html;
    index index.html;

    # Обслуживание статики
    location / {
        try_files $uri /index.html;
    }

    # Проксирование запросов на backend
    location /api/ {
        proxy_pass http://backend:3000;  # Прокси запросы на backend, который работает на порту 3000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Разрешение CORS
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type";
    }

    # Обслуживание статики из папки uploads
    location /uploads/ {
        alias /uploads/;
        autoindex off;
        access_log off;
        expires max;
    }

    location /manifest.json {
        root /usr/share/nginx/html;
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    }

    # Безопасность
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
}
