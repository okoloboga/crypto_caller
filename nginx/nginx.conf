worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Блок для HTTP, перенаправляющий на HTTPS
    server {
        listen 8080;
        server_name caller.ruble.website;

        return 301 https://$host$request_uri;
    }

    # Блок для HTTPS
    server {
        listen 444 ssl;
        server_name caller.ruble.website;

        ssl_certificate /etc/letsencrypt/live/caller.ruble.website/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/caller.ruble.website/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_CBC_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers off;

        # Указываем путь к статическим файлам
        root /usr/share/nginx/html;
        index index.html;

        # Обслуживание статики (для SPA React, Vue и т.п.)
        location / {
            try_files $uri $uri/ /index.html;  # Важно для Single Page Application (SPA)
        }

        # Проксирование запросов на backend
        location /api/ {
            proxy_pass http://backend:3000;  # Проксируем запросы на backend, который работает на порту 3000
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
        # Добавление заголовков для кэширования
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|ttf|woff|woff2|eot|otf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable, no-transform";
        }
    }
}
